[{"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\index.js":"1","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\reportWebVitals.js":"2","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\App.js":"3","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\ViewPets.js":"4","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\AddPet.js":"5","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\components\\PetForm.js":"6","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\PetDetail.js":"7","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\components\\AdoptButton.js":"8","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\EditPet.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1133,"mtime":1612388871253,"results":"13","hashOfConfig":"11"},{"size":1366,"mtime":1612390766904,"results":"14","hashOfConfig":"11"},{"size":2503,"mtime":1612385056108,"results":"15","hashOfConfig":"11"},{"size":2136,"mtime":1612385211271,"results":"16","hashOfConfig":"11"},{"size":1842,"mtime":1612386908407,"results":"17","hashOfConfig":"11"},{"size":715,"mtime":1612382486497,"results":"18","hashOfConfig":"11"},{"size":2781,"mtime":1612384076402,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"weczha",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\index.js",[],["42","43"],"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\reportWebVitals.js",[],"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\App.js",["44"],"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\ViewPets.js",["45","46","47","48","49"],"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\AddPet.js",[],"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\components\\PetForm.js",["50","51"],"import React, {useState} from 'react';\r\nimport {navigate} from '@reach/router';\r\n\r\nconst PetForm = ({handleSubmit, name, setName, type, setType, description, setDescription, skill1, skill2, skill3, setSkill1, setSkill2, setSkill3, verb}) => {\r\n    return (\r\n        <form className='form-group'>\r\n            <div className='form-grouping'>\r\n                <label htmlFor='name'>Pet Name: </label>\r\n                    <input className='form-control col-6 m-auto' type='text' defaultValue = {name} onChange={(e)=> setName(e.target.value)}/>\r\n                    <p className='text-danger'>{ name.length < 3  ? 'Pet Name must be at least 3 character!' : null }</p>\r\n                <label htmlFor='type'>Pet Type: </label>\r\n                    <input className='form-control col-6 m-auto' type='text' defaultValue = {type} onChange={(e)=> setType(e.target.value)}/>\r\n                    <p className='text-danger'>{ type.length < 3  ? 'Pet type must be at least 3 character!' : null }</p>\r\n                <label htmlFor='description'>Pet Description: </label>\r\n                    <input className='form-control col-6 m-auto' type='text' defaultValue = {description} onChange={(e)=> setDescription(e.target.value)}/>\r\n                    <p className='text-danger'>{ description.length < 3  ? 'Pet description must be at least 3 character!' : null }</p>\r\n            </div>\r\n            <div className ='form-grouping'>\r\n                <label htmlFor='skills'>Skills (optional):</label>\r\n                    <input className='form-control col-6 mx-auto my-2' type='text' defaultValue = {skill1} onChange={(e) => setSkill1(e.target.value)} />\r\n                    <input className='form-control col-6 mx-auto my-2' type='text' defaultValue = {skill2} onChange={(e) => setSkill2(e.target.value)}/>\r\n                    <input className='form-control col-6 mx-auto my-2' type='text' defaultValue = {skill3} onChange={(e) => setSkill3(e.target.value)}/>\r\n                <button className='btn-lg btn-primary my-3 mx-2' onClick = {handleSubmit}>{verb} pet</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PetForm;","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\PetDetail.js",["52"],"import axios from 'axios'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {Link} from '@reach/router'\r\nimport AdoptButton from '../components/AdoptButton'\r\n\r\nconst PetDetail = (props) => {\r\n    const [thisPet, setThisPet] =useState({})\r\n    const {id} = props\r\n    useEffect(\r\n        () => {\r\n            axios.get(`http://localhost:8000/api/pets/${id}`)\r\n            .then(res => {setThisPet(res.data.pet)\r\n                console.log(thisPet);})\r\n            .catch(err => console.log(err))\r\n        },\r\n        [thisPet.name, thisPet.type, thisPet.description])\r\n    return(\r\n        <div>\r\n            <header className=\"row bg-white\">\r\n                <h1 className='text-left ml-3 my-5'>Pet Shelter</h1>\r\n                <Link to='/' className='text-right text-primary header-link my-4'>back to home</Link>\r\n            </header>\r\n            <h4 className='text-left'>Details about: {thisPet.name}</h4>\r\n            <AdoptButton record={thisPet} records={props.pets} setRecords={props.setPets} petName={thisPet.name}/>\r\n            <div className='border border-dark'>\r\n                <ul className='list-unstyled p-5'>\r\n                    <li className='pet-detail-item'><b>Pet Type:</b> {thisPet.type}</li>\r\n                    <li className='pet-detail-item'><b>Description:</b> {thisPet.description}</li>\r\n                    <ul className='list-unstyled'><b>Skills:</b>\r\n                        {thisPet.skills ? <li className='pet-detail-item'>{thisPet.skills[0]}</li> : null}\r\n                        {thisPet.skills ? <li className='pet-detail-item'>{thisPet.skills[1]}</li> : null}\r\n                        {thisPet.skills ? <li className='pet-detail-item'>{thisPet.skills[2]}</li> : null}\r\n                    </ul>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PetDetail","C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\components\\AdoptButton.js",[],"C:\\Users\\mattm\\Desktop\\projects\\MMcKenna-exam-2\\client\\src\\views\\EditPet.js",["53"],"import React, {useState, useEffect} from 'react';\r\nimport PetForm from '../components/PetForm';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\n\r\nconst EditPet = (props) => {\r\n    const [thisPet, setThisPet] = useState({})\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType]= useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [skill1, setSkill1] = useState([])\r\n    const [skill2, setSkill2] = useState([])\r\n    const [skill3, setSkill3] = useState([])\r\n    const [errors, setErrors] = useState([]);\r\n\r\n    const {id} = props;\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pets/${id}`)\r\n        .then(res =>{\r\n            setThisPet(res.data.pet);\r\n            console.log(res.data.pet);\r\n            setName(res.data.pet.name);\r\n            setType(res.data.pet.type);\r\n            setDescription(res.data.pet.description);\r\n            setSkill1(res.data.pet.skills[0]);\r\n            setSkill2(res.data.pet.skills[1]);\r\n            setSkill3(res.data.pet.skills[2]);\r\n        } )\r\n        .catch(err => console.log(err))\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        axios.put(`http://localhost:8000/api/pets/update/${id}`,{\r\n            name: name,\r\n            type: type,\r\n            description: description,\r\n            skills:[skill1, skill2, skill3]\r\n        })\r\n        .then(res=> {console.log(res)\r\n        props.setEditPet(props.editPet +1);\r\n        navigate(`/pet/${thisPet._id}`)})\r\n        .catch(err => {\r\n            const errorResponse = err.response.data.errors;\r\n            const errorArr =[];\r\n            for (const key of Object.keys(errorResponse)) {\r\n                errorArr.push(errorResponse[key].message)\r\n            }\r\n            setErrors(errorArr);\r\n            console.log({err});\r\n            console.log(errors);\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <header className=\"row bg-white\">\r\n                <h1 className='text-left ml-3 my-4'>Pet Shelter</h1>\r\n                <Link to='/' className='text-right text-primary header-link'>back to home</Link>\r\n            </header>\r\n            <div className='border border-dark'>\r\n                <h3>Edit: {thisPet.name}</h3>\r\n                <PetForm handleSubmit={handleSubmit} name={name} setName={setName} type={type} setType={setType}\r\n                description={description} setDescription={setDescription} skill1={skill1} setSkill1={setSkill1}\r\n                skill2={skill2} setSkill2={setSkill2} skill3={skill3} setSkill3={setSkill3} verb={'Edit'}/>\r\n                {errors.map((err,idx) => <p className='text-danger' key={idx}>{err}</p>)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditPet;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":4,"column":9,"nodeType":"60","messageId":"61","endLine":4,"endColumn":17},{"ruleId":"58","severity":1,"message":"62","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"63","line":1,"column":26,"nodeType":"60","messageId":"61","endLine":1,"endColumn":35},{"ruleId":"58","severity":1,"message":"59","line":2,"column":15,"nodeType":"60","messageId":"61","endLine":2,"endColumn":23},{"ruleId":"58","severity":1,"message":"64","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"66","line":22,"column":17,"nodeType":"67","endLine":22,"endColumn":29},{"ruleId":"58","severity":1,"message":"62","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"59","line":2,"column":9,"nodeType":"60","messageId":"61","endLine":2,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":16,"column":9,"nodeType":"70","endLine":16,"endColumn":58,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":32,"column":8,"nodeType":"70","endLine":32,"endColumn":10,"suggestions":"73"},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'navigate' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'thisPet'. Either include them or remove the dependency array.","ArrayExpression",["76"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},"Update the dependencies array to be: [thisPet.name, thisPet.type, thisPet.description, id, thisPet]",{"range":"82","text":"83"},"Update the dependencies array to be: [id]",{"range":"84","text":"85"},[525,574],"[thisPet.name, thisPet.type, thisPet.description, id, thisPet]",[1134,1136],"[id]"]